import { useState, useEffect, useRef } from 'react';

interface Book {
  id: number;
  title: string;
  author: string;
  genre: string;
}

const BOOKS_DATA: Book[] = [
  {
    id: 1,
    title: '–ì–∞—Ä—Ä—ñ –ü–æ—Ç—Ç–µ—Ä —ñ —Ñ—ñ–ª–æ—Å–æ—Ñ—Å—å–∫–∏–π –∫–∞–º—ñ–Ω—å',
    author: '–î–∂.–ö. –†–æ–ª—ñ–Ω–≥',
    genre: '–§–µ–Ω—Ç–µ–∑—ñ',
  },
  { id: 2, title: '1984', author: '–î–∂–æ—Ä–¥–∂ –û—Ä–≤–µ–ª–ª', genre: '–ê–Ω—Ç–∏—É—Ç–æ–ø—ñ—è' },
  {
    id: 3,
    title: '–ì–æ—Ä–¥—ñ—Å—Ç—å —ñ —É–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è',
    author: '–î–∂–µ–π–Ω –û—Å—Ç—ñ–Ω',
    genre: '–†–æ–º–∞–Ω—Ç–∏–∫–∞',
  },
  { id: 4, title: '–í–±–∏—Ç–∏ –ø–µ—Ä–µ—Å–º—ñ—à–Ω–∏–∫–∞', author: '–•–∞—Ä–ø–µ—Ä –õ—ñ', genre: '–î—Ä–∞–º–∞' },
  {
    id: 5,
    title: '–í–æ–ª–æ–¥–∞—Ä –ø–µ—Ä—Å–Ω—ñ–≤',
    author: '–î–∂.–†.–†. –¢–æ–ª–∫—ñ–Ω',
    genre: '–§–µ–Ω—Ç–µ–∑—ñ',
  },
  {
    id: 6,
    title: '–í–µ–ª–∏–∫–∏–π –ì–µ—Ç—Å–±—ñ',
    author: '–§. –°–∫–æ—Ç—Ç –§—ñ—Ü–¥–∂–µ—Ä–∞–ª—å–¥',
    genre: '–ö–ª–∞—Å–∏–∫–∞',
  },
  {
    id: 7,
    title: '–°—Ç–æ —Ä–æ–∫—ñ–≤ —Å–∞–º–æ—Ç–Ω–æ—Å—Ç—ñ',
    author: '–ì–∞–±—Ä—ñ–µ–ª—å –ì–∞—Ä—Å—ñ—è –ú–∞—Ä–∫–µ—Å',
    genre: '–ú–∞–≥—ñ—á–Ω–∏–π —Ä–µ–∞–ª—ñ–∑–º',
  },
  {
    id: 8,
    title: '–ó–ª–æ—á–∏–Ω —ñ –∫–∞—Ä–∞',
    author: '–§–µ–¥—ñ—Ä –î–æ—Å—Ç–æ—î–≤—Å—å–∫–∏–π',
    genre: '–ö–ª–∞—Å–∏–∫–∞',
  },
  { id: 9, title: '–•–æ–±–±—ñ—Ç', author: '–î–∂.–†.–†. –¢–æ–ª–∫—ñ–Ω', genre: '–§–µ–Ω—Ç–µ–∑—ñ' },
  { id: 10, title: '–î–∂–µ–π–Ω –ï–π—Ä', author: '–®–∞—Ä–ª–æ—Ç—Ç–∞ –ë—Ä–æ–Ω—Ç–µ', genre: '–†–æ–º–∞–Ω—Ç–∏–∫–∞' },
  {
    id: 11,
    title: '–î–∏–≤–Ω–∏–π –Ω–æ–≤–∏–π —Å–≤—ñ—Ç',
    author: '–û–ª–¥–æ—Å –•–∞–∫—Å–ª—ñ',
    genre: '–ê–Ω—Ç–∏—É—Ç–æ–ø—ñ—è',
  },
  { id: 12, title: '–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω—ñ–Ω–∞', author: '–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π', genre: '–ö–ª–∞—Å–∏–∫–∞' },
];

const GENRES = [
  '–í—Å—ñ –∂–∞–Ω—Ä–∏',
  '–§–µ–Ω—Ç–µ–∑—ñ',
  '–ê–Ω—Ç–∏—É—Ç–æ–ø—ñ—è',
  '–†–æ–º–∞–Ω—Ç–∏–∫–∞',
  '–î—Ä–∞–º–∞',
  '–ö–ª–∞—Å–∏–∫–∞',
  '–ú–∞–≥—ñ—á–Ω–∏–π —Ä–µ–∞–ª—ñ–∑–º',
];

export default function BookFilter() {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedGenre, setSelectedGenre] = useState('–í—Å—ñ –∂–∞–Ω—Ä–∏');
  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState('');
  const [filteredBooks, setFilteredBooks] = useState<Book[]>(BOOKS_DATA);

  // Ref –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Ç–∞–π–º–µ—Ä–∞ debounce
  const timeoutRef = useRef<number | null>(null);

  // Debounce –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
  useEffect(() => {
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä
    if (timeoutRef.current) {
      clearTimeout(timeoutRef.current);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä
    timeoutRef.current = setTimeout(() => {
      setDebouncedSearchTerm(searchTerm);
    }, 500);

    // Cleanup —Ñ—É–Ω–∫—Ü–∏—è
    return () => {
      if (timeoutRef.current) {
        clearTimeout(timeoutRef.current);
      }
    };
  }, [searchTerm]);

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∫–Ω–∏–≥ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ debouncedSearchTerm –∏–ª–∏ selectedGenre
  useEffect(() => {
    let filtered = BOOKS_DATA;

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Å debounce)
    if (debouncedSearchTerm.trim()) {
      filtered = filtered.filter((book) =>
        book.title.toLowerCase().includes(debouncedSearchTerm.toLowerCase()),
      );
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∂–∞–Ω—Ä—É
    if (selectedGenre !== '–í—Å—ñ –∂–∞–Ω—Ä–∏') {
      filtered = filtered.filter((book) => book.genre === selectedGenre);
    }

    setFilteredBooks(filtered);
  }, [debouncedSearchTerm, selectedGenre]);

  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearchTerm(e.target.value);
  };

  const handleGenreChange = (e: React.ChangeEvent<HTMLSelectElement>) => {
    setSelectedGenre(e.target.value);
  };

  const isSearching = searchTerm !== debouncedSearchTerm;

  return (
    <div className="rounded-lg bg-white p-6 shadow-md">
      <h2 className="mb-4 text-xl font-bold">
        –ó–∞–≤–¥–∞–Ω–Ω—è 3: –ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–Ω–∏–≥
      </h2>

      {/* –ü–æ–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ */}
      <div className="mb-6 grid gap-4 md:grid-cols-2">
        {/* –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é */}
        <div>
          <label
            htmlFor="book-search"
            className="mb-2 block text-sm font-medium text-gray-700"
          >
            –ü–æ—à—É–∫ –∑–∞ –Ω–∞–∑–≤–æ—é:
          </label>
          <input
            id="book-search"
            type="text"
            value={searchTerm}
            onChange={handleSearchChange}
            placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫–Ω–∏–≥–∏..."
            className="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-transparent focus:ring-2 focus:ring-blue-500 focus:outline-none"
          />
          <p className="mt-1 text-xs text-gray-500">
            –ü–æ—à—É–∫ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è —á–µ—Ä–µ–∑ 500 –º—Å –ø—ñ—Å–ª—è –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ –≤–≤–µ–¥–µ–Ω–Ω—è
            {isSearching && <span className="text-blue-600"> (–ø–æ—à—É–∫...)</span>}
          </p>
        </div>

        {/* –í—ã–±–æ—Ä –∂–∞–Ω—Ä–∞ */}
        <div>
          <label
            htmlFor="genre-select"
            className="mb-2 block text-sm font-medium text-gray-700"
          >
            –§—ñ–ª—å—Ç—Ä –∑–∞ –∂–∞–Ω—Ä–æ–º:
          </label>
          <select
            id="genre-select"
            value={selectedGenre}
            onChange={handleGenreChange}
            className="w-full rounded-md border border-gray-300 px-3 py-2 focus:border-transparent focus:ring-2 focus:ring-blue-500 focus:outline-none"
          >
            {GENRES.map((genre) => (
              <option key={genre} value={genre}>
                {genre}
              </option>
            ))}
          </select>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∏–ª—å—Ç—Ä–∞—Ö */}
      <div className="mb-4 text-sm text-gray-600">
        <div className="flex flex-wrap gap-2">
          <span>
            –ó–Ω–∞–π–¥–µ–Ω–æ {filteredBooks.length} –∑ {BOOKS_DATA.length} –∫–Ω–∏–≥
          </span>
          {debouncedSearchTerm && (
            <span className="rounded bg-blue-100 px-2 py-1 text-blue-800">
              –Ω–∞–∑–≤–∞: "{debouncedSearchTerm}"
            </span>
          )}
          {selectedGenre !== '–í—Å—ñ –∂–∞–Ω—Ä–∏' && (
            <span className="rounded bg-green-100 px-2 py-1 text-green-800">
              –∂–∞–Ω—Ä: {selectedGenre}
            </span>
          )}
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∫–Ω–∏–≥ */}
      {filteredBooks.length === 0 ? (
        <div className="rounded-lg bg-gray-50 py-8 text-center text-gray-500">
          <div className="mb-2 text-lg font-medium">
            üìö –†–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ
          </div>
          <p>–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –∫—Ä–∏—Ç–µ—Ä—ñ—ó –ø–æ—à—É–∫—É:</p>
          <ul className="mt-2 text-sm">
            <li>‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–Ω—è</li>
            <li>‚Ä¢ –û–±–µ—Ä—ñ—Ç—å —ñ–Ω—à–∏–π –∂–∞–Ω—Ä</li>
            <li>‚Ä¢ –û—á–∏—Å—Ç—ñ—Ç—å —Ñ—ñ–ª—å—Ç—Ä–∏</li>
          </ul>
        </div>
      ) : (
        <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {filteredBooks.map((book) => (
            <div
              key={book.id}
              className="rounded-lg border border-gray-200 bg-gray-50 p-4 transition-shadow hover:shadow-md"
            >
              <h3 className="mb-2 line-clamp-2 font-semibold text-gray-900">
                {book.title}
              </h3>
              <p className="mb-1 text-sm text-gray-600">
                <span className="font-medium">–ê–≤—Ç–æ—Ä:</span> {book.author}
              </p>
              <span className="inline-flex items-center rounded-full bg-indigo-100 px-2.5 py-0.5 text-xs font-medium text-indigo-800">
                {book.genre}
              </span>
            </div>
          ))}
        </div>
      )}
    </div>
  );
}
