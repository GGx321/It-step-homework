import { useState } from 'react';

export default function StarRating() {
  const [rating, setRating] = useState(0);
  const [hoveredRating, setHoveredRating] = useState(0);

  const ratingTexts: Record<number, string> = {
    1: '–ñ–∞—Ö–ª–∏–≤–æ',
    2: '–ü–æ–≥–∞–Ω–æ',
    3: '–ó–∞–¥–æ–≤—ñ–ª—å–Ω–æ',
    4: '–î–æ–±—Ä–µ',
    5: '–í—ñ–¥–º—ñ–Ω–Ω–æ',
  };

  const ratingColors: Record<number, string> = {
    1: 'text-red-600',
    2: 'text-orange-600',
    3: 'text-yellow-600',
    4: 'text-blue-600',
    5: 'text-green-600',
  };

  const handleStarClick = (starNumber: number) => {
    setRating(starNumber);
  };

  const handleStarHover = (starNumber: number) => {
    setHoveredRating(starNumber);
  };

  const handleMouseLeave = () => {
    setHoveredRating(0);
  };

  const resetRating = () => {
    setRating(0);
    setHoveredRating(0);
  };

  const displayRating = hoveredRating || rating;

  return (
    <div className="rounded-lg border-2 border-gray-300 bg-white p-6 shadow-sm">
      <h3 className="mb-6 text-lg font-semibold text-gray-800">
        –ó–∞–≤–¥–∞–Ω–Ω—è 2: –†–µ–π—Ç–∏–Ω–≥ —ñ–∑ —Ç–µ–∫—Å—Ç–æ–º
      </h3>

      <div className="space-y-4 text-center">
        {/* –ó–≤–µ–∑–¥—ã */}
        <div
          className="flex justify-center space-x-1"
          onMouseLeave={handleMouseLeave}
        >
          {[1, 2, 3, 4, 5].map((starNumber) => (
            <button
              key={starNumber}
              onClick={() => handleStarClick(starNumber)}
              onMouseEnter={() => handleStarHover(starNumber)}
              className="text-4xl transition-transform hover:scale-110 focus:scale-110 focus:outline-none"
            >
              <span
                className={
                  starNumber <= displayRating
                    ? 'text-yellow-400'
                    : 'text-gray-300'
                }
              >
                ‚≠ê
              </span>
            </button>
          ))}
        </div>

        {/* –¢–µ–∫—Å—Ç–æ–≤–∞—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è */}
        <div className="flex h-16 items-center justify-center">
          {displayRating > 0 && (
            <div className="text-center">
              <div
                className={`text-2xl font-bold ${ratingColors[displayRating]} mb-1`}
              >
                {ratingTexts[displayRating]}
              </div>
              <div className="text-sm text-gray-500">
                –û—Ü—ñ–Ω–∫–∞: {displayRating} –∑ 5 –∑—ñ—Ä–æ–∫
              </div>
            </div>
          )}

          {displayRating === 0 && (
            <div className="text-center text-gray-500">
              <p className="mb-1 text-lg">üåü</p>
              <p>–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∑—ñ—Ä–∫–∏ –¥–ª—è –æ—Ü—ñ–Ω–∫–∏</p>
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
        {rating > 0 && (
          <button
            onClick={resetRating}
            className="text-sm text-gray-500 underline hover:text-gray-700 focus:outline-none"
          >
            –°–∫–∏–Ω—É—Ç–∏ –æ—Ü—ñ–Ω–∫—É
          </button>
        )}

        {/* –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        {rating > 0 && (
          <div className="mt-6 rounded-md bg-gray-50 p-4">
            <h4 className="mb-2 font-medium text-gray-800">–î–µ—Ç–∞–ª—ñ –æ—Ü—ñ–Ω–∫–∏:</h4>
            <div className="space-y-1 text-sm text-gray-600">
              <p>
                ‚ú® –û–±—Ä–∞–Ω–∞ –æ—Ü—ñ–Ω–∫–∞:{' '}
                <span className="font-medium">{rating}/5</span>
              </p>
              <p>
                üí≠ –Ü–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü—ñ—è:{' '}
                <span className={`font-medium ${ratingColors[rating]}`}>
                  {ratingTexts[rating]}
                </span>
              </p>
              <p>
                üìä –í—ñ–¥—Å–æ—Ç–æ–∫:{' '}
                <span className="font-medium">
                  {Math.round((rating / 5) * 100)}%
                </span>
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}
